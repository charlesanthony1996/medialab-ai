version: '3.8'
services:
  frontend:
    build: ./frontend
    container_name: frontend_service
    ports:
      - "127.0.0.1:80:80"
    restart: on-failure
    depends_on:
      - server
      - openai_backend
    networks:
      - backend_network
    volumes:
      - './dist:/dist'


  server:
    build: ./server
    container_name: server_service
    ports:
      - "127.0.0.1:8000:8000"
    volumes:
      - ./server:/app
    env_file:
      - ./server/.env
    environment:
      - OPEN_API_KEY=${OPEN_API_KEY}
      - FLASK_ENV=development
    restart: on-failure
    networks:
      - backend_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  filter:
    build: ./filter
    ports:
      - "127.0.0.1:7000:7000"
    env_file:
      - ./filter/.env
    restart: on-failure
    networks:
      - backend_network

  openai_backend:
    build: ./openai_backend
    container_name: openai_backend_service
    ports:
      - "127.0.0.1:6000:6000"
    env_file:
      - ./openai_backend/.env
    environment:
      - OPEN_API_KEY=${OPEN_API_KEY}
    restart: on-failure
    networks:
      - backend_network

  database:
    build: ./database
    container_name: database_service
    ports:
      - "127.0.0.1:5001:5001"


networks:
  backend_network:
    driver: bridge
